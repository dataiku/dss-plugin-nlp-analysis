{
    "meta": { 
        "label": "Ontology tagging",
        "description": "Tag documents matching keywords within a corpus of text documents",
        "icon": "icon-pushpin"
    },
    "kind": "PYTHON",
    "inputRoles": [
        {
            "name": "Document dataset",
            "label": "Document dataset",
            "description": "Dataset with a column containing the text documents to tag",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        },
        {
            "name": "Ontology dataset",
            "label": "Ontology dataset",
            "description": "Dataset with columns for tags, keywords and categories",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],
    "outputRoles": [
        {
            "name": "Tagged documents",
            "label": "Tagged documents",
            "description": "Dataset with the input documents and their assigned tags",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],
    "selectableFromDataset": "Document dataset",
    "paramsPythonSetup": "pick_languages.py",
    "params": [
         {
            "name": "separator_document_dataset",
            "label": "Document dataset",
            "type": "SEPARATOR"
        },
        {
            "name": "text_column",
            "label": "Text column",
            "type": "COLUMN",
            "description": "Column containing the text documents",
            "mandatory": true,
            "columnRole": "Document dataset",
            "allowedColumnTypes": [
                "string"
            ]
        },
        {
            "name": "language",
            "label": "Language",
            "type": "SELECT",
            "getChoicesFromPython": true,
            "defaultValue": "en"
        },
        {
            "name": "language_column",
            "label": "Language column",
            "type": "COLUMN",
            "description": "Column containing ISO 639-1 language codes",
            "columnRole": "Document dataset",
            "allowedColumnTypes": [
                "string"
            ],
            "visibilityCondition": "model.language == 'language_column'"
        },
        {
            "name": "separator_ontology_dataset",
            "label": "Ontology dataset",
            "type": "SEPARATOR"
        },
        {
            "name": "tag_column",
            "label": "Tag column",
            "type":"COLUMN",
            "mandatory":true,
            "columnRole":"Ontology dataset",
            "allowedColumnTypes": [
                "string"
            ]
        },
        {
            "name":"keyword_column",
            "label":"Keyword column",
            "type":"COLUMN",
            "mandatory": true,
            "columnRole":"Ontology dataset",
            "allowedColumnTypes": [
                "string"
            ]  
        },
        {
            "name":"category_column",
            "label":"Category column (optional)",
            "type": "COLUMN",
            "mandatory":false,
            "columnRole":"Ontology dataset",
            "allowedColumnTypes": [
                "string"
            ]
        },
        {
            "name": "separator_matching_parameters",
            "label": "Matching Parameters",
            "type": "SEPARATOR"
        },
        {
            "name":"case_sensitivity",
            "label":"Case-sensitive",
            "description": "Match keywords with the same case (upper or lower)",
            "type": "BOOLEAN",
            "defaultValue":true
        },
        {
            "name":"lemmatization",
            "label":"Lemmatization",
            "description": "Simplify words to their “lemma” form e.g. going -> go, mice -> mouse",
            "type": "BOOLEAN",
            "defaultValue":false
        },
        {
            "name":"unicode_normalization",
            "label":"Unicode normalization",
            "description": "Apply NFD Unicode normalization before matching",
            "type": "BOOLEAN",
            "defaultValue":false  
        },
          {
            "name": "separator_output_parameters",
            "label": "Output parameters",
            "type": "SEPARATOR"
        },
        {
            "name": "output_format_with_categories",
            "label": "Output format",
            "type": "SELECT",
            "visibilityCondition": "model.category_column.length>0",
            "selectChoices": [
                {
                    "value": "one_row_per_tag",
                    "label": "One row per tag"
                },
                {
                    "value": "one_row_per_doc_tag_lists",
                    "label": "One row per document with lists of tags"
                },
                {
                    "value": "one_row_per_doc_json",
                    "label": "One row per document with JSON tags"
                }
            ],
            "defaultValue": "one_row_per_doc_tag_lists"
        },
        {
            "name": "output_format",
            "label": "Output format",
            "type": "SELECT",
            "visibilityCondition": "model.category_column.length==0",
            "selectChoices": [
                {
                    "value": "one_row_per_tag",
                    "label": "One row per tag"
                },
                {
                    "value": "one_row_per_doc_tag_list",
                    "label": "One row per document with list of tags"
                }
            ],
            "defaultValue": "one_row_per_doc_tag_list"
        }
    ]
}
